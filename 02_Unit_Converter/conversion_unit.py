CONVERSION_FACTORS = {
  # ---------- LENGTH ----------
  ("m", "cm"): 100.0,
  ("cm", "m"): 0.01,

  ("m", "km"): 0.001,
  ("km", "m"): 1000.0,

  ("m", "in"): 39.3701,
  ("in", "m"): 1 / 39.3701,

  ("m", "ft"): 3.28084,
  ("ft", "m"): 0.3048,

  ("m", "yd"): 1.09361,
  ("yd", "m"): 0.9144,

  ("km", "mi"): 0.621371,
  ("mi", "km"): 1.60934,

  ("cm", "in"): 0.393701,
  ("in", "cm"): 2.54,

  ("cm", "ft"): 0.0328084,
  ("ft", "cm"): 30.48,

  ("yd", "ft"): 3.0,
  ("ft", "yd"): 1 / 3.0,
  # ---------- WEIGHT/MASS ----------
  ("kg", "g"): 1000.0,
  ("g", "kg"): 0.001,

  ("kg", "lb"): 2.20462,
  ("lb", "kg"): 0.453592,

  ("g", "mg"): 1000.0,
  ("mg", "g"): 0.001,

  ("oz", "g"): 28.3495,
  ("g", "oz"): 1 / 28.3495,

  ("lb", "oz"): 16.0,
  ("oz", "lb"): 1 / 16.0,

  # ---------- VOLUME ----------
  ("l", "ml"): 1000.0,
  ("ml", "l"): 0.001,

  ("l", "gal"): 0.264172,      # US gallons
  ("gal", "l"): 3.78541,

  ("l", "qt"): 1.05669,        # US quart
  ("qt", "l"): 0.946353,

  ("l", "pt"): 2.11338,        # US pint
  ("pt", "l"): 0.473176,

  ("ml", "gal"): 0.000264172,  # US gallons
  ("gal", "ml"): 3785.41,

  # ---------- TIME ----------
  ("s", "min"): 1 / 60.0,
  ("min", "s"): 60.0,

  ("min", "hr"): 1 / 60.0,
  ("hr", "min"): 60.0,

  ("hr", "day"): 1 / 24.0,
  ("day", "hr"): 24.0,

  # ---------- SPEED ----------
  ("m/s", "km/h"): 3.6,
  ("km/h", "m/s"): 0.277778,

  ("mi/h", "km/h"): 1.60934,
  ("km/h", "mi/h"): 0.621371,

  ("knot", "km/h"): 1.852,
  ("km/h", "knot"): 0.539957,

  ("m/s", "mi/h"): 2.23694,
  ("mi/h", "m/s"): 0.44704,

  # ---------- DIGITAL STORAGE ----------
  ("bit", "byte"): 1 / 8.0,
  ("byte", "bit"): 8.0,

  ("byte", "kb"): 1 / 1024.0,   # 1 KB = 1024 bytes
  ("kb", "byte"): 1024.0,

  ("kb", "mb"): 1 / 1024.0,
  ("mb", "kb"): 1024.0,

  ("mb", "gb"): 1 / 1024.0,
  ("gb", "mb"): 1024.0,

  ("tb", "gb"): 1024.0,
  ("gb", "tb"): 1 / 1024.0,
}

def c_to_f(value): return (value * 9.0/5.0) + 32.0
def f_to_c(value): return (value - 32.0) * 5.0/9.0
def c_to_k(value): return value + 273.15
def k_to_c(value): return value - 273.15
# etc.

TEMPERATURE_CONVERSIONS = {
    ("c", "f"): c_to_f,
    ("f", "c"): f_to_c,
    ("c", "k"): c_to_k,
    ("k", "c"): k_to_c,
    ("f", "k"): lambda v: (v - 32)*5/9 + 273.15,
    ("k", "f"): lambda v: (v - 273.15)*9/5 + 32
}